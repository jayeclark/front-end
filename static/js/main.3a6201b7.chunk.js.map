{"version":3,"sources":["assets/nf-favicon.ico","assets/ap-favicon-m.ico","assets/ab-icon.ico","assets/ap-globalnav_apple_image__cxwwnrj0urau_large.svg","assets/nf-logo.svg","assets/ab-logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Netflix","React","lazy","Apple","Airbnb","icons","nf","nfIcon","ap","apIcon","ab","abIcon","NFSiteLoader","fallback","APSiteLoader","ABSiteLoader","App","useState","site","siteURL","setSite","iconLink","document","getElementById","href","siteProps","siteData","pageTitle","innerHTML","title","pageMetaDesc","setAttribute","metaDescription","pageCSS","pageCSSRef","refReplace","replace","newSiteURL","siteCode","handleSetSite","e","showContent","body","getElementsByTagName","style","transitionProperty","transitionDuration","transitionTimingFunction","backgroundColor","content","classList","contains","remove","setTimeout","tempSite","add","newSiteProps","toString","adjustPageData","className","height","id","padding","display","margin","onClick","src","apLogo","alt","lineHeight","fontSize","fontWeight","fontColor","fontFamily","nfLogo","abLogo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a6201b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nf-favicon.a7aca499.ico\";","export default __webpack_public_path__ + \"static/media/ap-favicon-m.955407ca.ico\";","export default __webpack_public_path__ + \"static/media/ab-icon.8d4dd0b7.ico\";","export default __webpack_public_path__ + \"static/media/ap-globalnav_apple_image__cxwwnrj0urau_large.61bf5a8f.svg\";","export default __webpack_public_path__ + \"static/media/nf-logo.7e00c168.svg\";","export default __webpack_public_path__ + \"static/media/ab-logo.7af2ee95.svg\";","import nfIcon from './assets/nf-favicon.ico';\nimport apIcon from './assets/ap-favicon-m.ico';\nimport abIcon from './assets/ab-icon.ico';\nimport apLogo from './assets/ap-globalnav_apple_image__cxwwnrj0urau_large.svg';\nimport nfLogo from './assets/nf-logo.svg';\nimport abLogo from './assets/ab-logo.svg';\nimport siteData from './data/sites.json';\nimport React, {useState, Suspense} from 'react';\nimport './App.css';\n\nconst Netflix = React.lazy(() => import('./components/main/Netflix.js'));\nconst Apple = React.lazy(() => import('./components/main/Apple.js'));\nconst Airbnb = React.lazy(() => import('./components/main/Airbnb.js'));\nconst icons = {nf: nfIcon, ap:apIcon, ab: abIcon};\n\nconst NFSiteLoader = () => (<Suspense fallback={<></>}><Netflix></Netflix></Suspense>)\nconst APSiteLoader = () => (<Suspense fallback={<></>}><Apple></Apple></Suspense>)\nconst ABSiteLoader = () => (<Suspense fallback={<></>}><Airbnb></Airbnb></Suspense>)\n\nfunction App() {\n\n  const [site, setSite] = useState({site:'ab', siteURL: <ABSiteLoader></ABSiteLoader>});\n\n  let iconLink = document.getElementById('icon');\n  iconLink.href = icons[site.site];\n\n  let siteProps = siteData[site.site];\n\n  let pageTitle = document.getElementById('page-title');\n  pageTitle.innerHTML = siteProps.title;\n\n  let pageMetaDesc = document.getElementById('meta-description');\n  pageMetaDesc.setAttribute(\"content\",siteProps.metaDescription);\n\n  let pageCSS = document.getElementById('main-style');\n  let pageCSSRef = pageCSS.href;\n  let refReplace = '/front-end/style/'+site.site+'.css';\n  pageCSSRef = pageCSSRef.replace(/\\/front-end\\/style\\/.+\\.css/i,refReplace);\n  pageCSS.setAttribute(\"href\",pageCSSRef);\n\n  const adjustPageData = siteCode => {\n\n    iconLink.href = icons[siteCode];\n    let newSiteProps = siteData[siteCode];\n    pageTitle.innerHTML = newSiteProps.title;\n    pageMetaDesc.setAttribute(\"content\", newSiteProps.metaDescription);\n    let pageCSS = document.getElementById('main-style');\n    let pageCSSRef = pageCSS.href.toString();\n    let refReplace =  '/front-end/style/'+site.site+'.css';\n    pageCSSRef = pageCSSRef.replace(/\\/front-end\\/style\\/.+\\.css/i,refReplace);\n    pageCSS.setAttribute(\"href\",pageCSSRef);\n    \n  }\n  \n  //const randomSite = () => {\n  //  let sites = ['nf','sf','ad','ab','nv','am'].filter(x=> x !== site);\n  //  let random = Math.floor(Math.random())*(sites.length);\n  //  setSite(sites[random]);\n  //}\n\n  const newSiteURL = (siteCode) => {\n\n    switch (siteCode) {\n\n      case siteCode === 'nf' :\n        return (<NFSiteLoader></NFSiteLoader>)\n\n      case siteCode === 'ap' :\n        return (<APSiteLoader></APSiteLoader>)\n\n      case siteCode === 'ab' :\n        return (<ABSiteLoader></ABSiteLoader>)\n\n      default :\n        return (<APSiteLoader></APSiteLoader>)\n\n    }\n\n  }\n\n\n  const handleSetSite = (e,siteCode) => {\n\n    const hideContent = () => {\n      let body = document.getElementsByTagName('body')[0];\n      body.style.backgroundColor = \"black\";\n      let content = document.getElementById(\"app-container\");\n      content.classList.add('invisible');\n    }\n\n    const showContent = () => {\n      let body = document.getElementsByTagName('body')[0];\n      body.style.transitionProperty = \"background-color\";\n      body.style.transitionDuration = \"0.4s\";\n      body.style.transitionTimingFunction = \"ease\";\n      body.style.backgroundColor = null;\n      let content = document.getElementById(\"app-container\");\n      if (content.classList.contains('invisible')) {content.classList.remove('invisible');}\n      setTimeout(()=> {\n        body.style.transitionProperty = null;\n        body.style.transitionDuration = null;\n        body.style.transitionTimingFunction = null;\n      },400)\n    }\n\n    const tempSite = {site: siteCode, siteURL: newSiteURL(siteCode)}\n    hideContent();\n    adjustPageData(siteCode);\n    setTimeout(()=>{\n      setSite(tempSite);\n      setTimeout(showContent,100)\n    },100);\n  \n  }\n\n  //React.useEffect(()=> {\n  //  adjustPageData(site.site);\n  //}, [site, adjustPageData]);\n\n  return (\n\n      <div className=\"App\">\n        \n          <div className=\"header\" style={{height:\"47px\"}}></div>\n          <div id=\"main-navbar\" className=\"main-navbar\" style={{padding:\"0px 5px\"}}>\n              <a style={{display:\"inline-block\",margin:\"auto 5px\"}} href=\"#ap\" id=\"ap\" className=\"option\" onClick={e => handleSetSite(e,'ap')}><div style={{display:\"flex\"}}><img style={{margin:\"-12px 4px\",height:'40px'}} src={apLogo} alt=\"Apple\" /><span style={{lineHeight:\"normal\",fontSize:\"12\",fontWeight:\"bold\", fontColor: \"#666\",fontFamily:\"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen','Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue'\"}}>Apple</span></div></a>\n              <a style={{display:\"inline-block\",margin:\"auto 5px\"}} href=\"#nf\" id=\"nf\" className=\"option\" onClick={e => handleSetSite(e,'nf')}><div style={{display:\"flex\", height:\"18px\", margin:\"-1px\"}}><img height=\"100%\" src={nfLogo} alt=\"Netflix\" /></div></a>\n              <a style={{display:\"inline-block\",margin:\"auto 5px\"}} href=\"#ab\" id=\"ab\" className=\"option\" onClick={e => handleSetSite(e,'ab')}><div style={{display:\"flex\", height:\"18px\", margin:\"-1px\"}}><img height=\"18px\" src={abLogo} alt=\"Airbnb\" /> </div></a>\n          </div>\n          <div className=\"main-content\">\n            <div id=\"app-container\" className=\"content\">\n              {site.site === 'nf' ? <NFSiteLoader></NFSiteLoader> :\n                  site.site === 'ab' ? <ABSiteLoader></ABSiteLoader> : <APSiteLoader></APSiteLoader>\n              }\n            </div>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}